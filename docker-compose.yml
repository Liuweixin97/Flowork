version: '3.8'

services:
  resume-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///data/resume_editor.db
      - HOST=0.0.0.0
      - PORT=8080
      - SECRET_KEY=${SECRET_KEY:-your-default-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-default-jwt-secret-change-in-production}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - resume_data:/app/data
      - resume_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - resume_network
      - dify_default  # 连接到Dify的网络（如果需要）
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

  resume-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:8080}
    ports:
      - "3000:3000"
    depends_on:
      resume-backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - resume_network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

  # PostgreSQL for production (optional - uncomment if needed)
  # resume-db:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB:-resume_editor}
  #     - POSTGRES_USER=${POSTGRES_USER:-resume_user}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - resume_network
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 512M
  #         cpus: '0.5'

volumes:
  resume_data:
    driver: local
  resume_logs:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  resume_network:
    driver: bridge
  dify_default:
    external: true  # 使用Dify的外部网络（可选）